{"version":3,"sources":["view/Home/Home.module.scss","components/BarChart/BarChat.module.scss","view/BarChartPage/BarChartPage.module.scss","components/LineChart/LineChart.module.scss","view/LineChartPage/LineChartPage.module.scss","components/PieChart/PieChart.module.scss","view/PieChartPage/PieChartPage.module.scss","components/Map/Map.module.scss","view/ChinaMapPage/ChinaMapPage.module.scss","components/SVGTree/SVGTree.module.scss","components/CanvasTree/CanvasTree.module.scss","view/CanvasTreePage/CanvasTreePage.module.scss","view/Home/Home.jsx","utils/colorUtils.js","utils/dataGenerator.js","utils/utils.js","Chart/Chart.js","components/BarChart/BarChart.jsx","view/BarChartPage/BarChartPage.jsx","components/LineChart/LineChart.jsx","view/LineChartPage/LineChartPage.jsx","components/PieChart/PieChart.jsx","view/PieChartPage/PieChartPage.jsx","components/Map/Map.jsx","view/ChinaMapPage/ChinaMapPage.jsx","components/SVGTree/SVGTree.jsx","view/SVGTreePage/SVGTreePage.jsx","components/CanvasTree/Tree.js","components/CanvasTree/CanvasTree.jsx","view/CanvasTreePage/CanvasTreePage.jsx","App.js","serviceWorker.js","index.js","App.module.scss"],"names":["module","exports","Home","className","css","home","content","randomColor","letters","color","i","Math","floor","random","appendFront0","numStr","length","getColorStrFromCanvas","context","xIndex","yIndex","pixelData","getImageData","data","toString","generateOrgChartData","depth","name","title","children","push","temp","uuid","s4","substring","colorUtil","compose","funcs","arg","reduce","a","b","getRandomColor16","text","ctx","x","y","fontSize","fontColor","font","fillStyle","fillText","wrapText","maxWidth","lineHeight","words","split","line","n","testLine","measureText","width","roundRect","height","radius","fill","stroke","tl","tr","br","bl","defaultRadius","side","beginPath","moveTo","lineTo","quadraticCurveTo","closePath","generateOrgChartDataFolded","foldDepth","this","tempNode","_children","Chart","_width","_height","_margins","top","left","right","bottom","_data","_scaleX","_scaleY","_colors","d3","_box","_svg","_body","w","arguments","h","m","d","s","clipPath","select","remove","append","attr","getBodyWidth","padding","getBodyHeight","bodyX","bodyY","renderBox","renderSVG","defineBodyClip","renderBody","render","BarChart","config","chartId","useRef","chartRef","useEffect","box","current","chart","margins","_","get","scaleX","domain","map","date","range","barPadding","scaleY","money","renderBars","bars","body","selectAll","enter","merge","bandwidth","barColor","transition","duration","animateDuration","exit","renderX","svg","insert","call","renderY","renderText","textColor","renderGrid","each","tickShowGrid","indexOf","gridColor","renderAxis","addMouseOn","on","e","position","node","target","hoverColor","classed","renderChart","id","c","barchart","BarChartPage","useState","setData","async","process","readData","console","log","readCSV","useMemo","barChartPage","LineChart","parseDate","value","nice","defined","Number","isNaN","xAxis","g","ticks","tickSizeOuter","yAxis","clone","renderLine","datum","filter","lineColor","linechart","LineChartPage","dayjs","format","val","month","undefined","lineChartPage","PieChart","chartContainer","offsetHeight","offsetWidth","t","reverse","arc","innerRadius","min","outerRadius","arcLabelRadius","arcLabel","pie","sort","renderPie","arcs","join","toLocaleString","centroid","endAngle","startAngle","ref","piechart","PieChartPage","pieChartPage","Map","mapData","cityData","projection","geo","scale","center","translate","path","colors","d3Color","renderMap","features","renderCity","coor","lat","addEvent","tooltip","html","style","pageX","pageY","ChinaMapPage","setMapData","setCityData","mapJson","cityJson","chinaMapPage","SVGTree","dy","tree","nodeSize","diagonal","root","x0","y0","descendants","forEach","renderSVGTree","gLink","gNode","update","source","altKey","nodes","links","eachBefore","tween","window","ResizeObserver","dispatch","nodeEnter","updateNode","lower","link","linkEnter","o","svgTree","SVGTreePage","treeJson","readJson","svgTreePage","Tree","containerDom","init","initVariables","initCanvas","initVirtualNode","setCanvasListener","nodeWidth","nodeHeight","unitPadding","unitWidth","unitHeight","container","canvasNode","hiddenCanvasNode","getContext","hiddenContext","virtualContainer","document","createElement","virtualContainerNode","colorNodeMap","setClickListener","setDragListener","setMouseWheelZoomListener","self","addEventListener","colorStr","Util","layerX","layerY","toggleTreeNode","treeNode","onDrag_","dragStartPoint_","onmousedown","onmousemove","onmouseout","onmouseup","event","preventDefault","deltaY","bigger","smaller","clearCanvas_","clearRect","hierarchy","treeGenerator","timer","drawCanvas","targetTreeNode","treeData","animatedStartX","animatedStartY","animatedEndX","animatedEndY","updateOrgUnits","updateLinks","addColorKey","bindNodeToTreeData","orgUnitSelection","linkSelection","linkData","newColor","drawShowCanvas","drawHiddenCanvas","linkPath","linkVertical","Path2D","indexX","indexY","CanvasTree","containerRef","draw","canvasTree","CanvasTreePage","Header","Footer","Sider","Content","Boolean","location","hostname","match","ReactDOM","basename","app","theme","mode","defaultSelectedKeys","Item","key","sider","sideBarMenu","to","main","exact","footer","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.20e5c148.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"home\":\"Home_home__33MBa\",\"content\":\"Home_content__QwLiU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"barchart\":\"BarChat_barchart__5cRVK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"barChartPage\":\"BarChartPage_barChartPage__b45Pf\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"linechart\":\"LineChart_linechart__3h562\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"lineChartPage\":\"LineChartPage_lineChartPage__287VI\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"piechart\":\"PieChart_piechart__2u9A2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"pieChartPage\":\"PieChartPage_pieChartPage__cnWIt\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"map\":\"Map_map__UaOG-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"mapChartPage\":\"ChinaMapPage_mapChartPage__3U9fV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"svgTree\":\"SVGTree_svgTree__3rQmQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"canvasTree\":\"CanvasTree_canvasTree__1kuCR\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"CanvasTreePage\":\"CanvasTreePage_CanvasTreePage__1TQnS\"};","import React from 'react';\nimport css from './Home.module.scss';\n\nfunction Home() {\n  return (\n    <div className={css.home}>\n      <div className={css.content}>\n        这是D3工程\n      </div>\n    </div>\n  );\n}\n\nexport default Home;\n","export function randomColor() {\n  let letters = ['0', '1', '2', '3', '4', '5', '6', '7', '8', '9', 'a', 'b', 'c', 'd', 'e', 'f'];\n  let color = '#';\n  for (let i = 0; i < 6; i++) {\n    color += letters[Math.floor(Math.random() * 16)];\n  }\n  return color;\n}\n\n// 如果数字不是3位 让数字字符串以0开头\nfunction appendFront0(numStr) {\n  if (numStr.length !== 2) {\n    return '0' + numStr;\n  } else {\n    return numStr;\n  }\n}\n\n// 拿到canvas中的颜色字符串\nexport function getColorStrFromCanvas(context, xIndex, yIndex) {\n  const pixelData = context.getImageData(xIndex, yIndex, 1, 1).data;\n  return (\n    '#' +\n    appendFront0(pixelData[0].toString(16)) +\n    appendFront0(pixelData[1].toString(16)) +\n    appendFront0(pixelData[2].toString(16))\n  );\n}\n","// 生成组织架构数据\nexport function generateOrgChartData(depth) {\n  const data = {\n    name: 'Lao Lao',\n    title: 'general manager',\n    children: [\n      { name: 'Bo Miao', title: 'department manager' },\n      {\n        name: 'Su Miao',\n        title: 'department manager',\n        children: [\n          { name: 'Tie Hua', title: 'senior engineer' },\n          {\n            name: 'Hei Hei',\n            title: 'senior engineer',\n            children: [\n              { name: 'Pang Pang', title: 'engineer' },\n              { name: 'Xiang Xiang', title: 'UE engineer' }\n            ]\n          }\n        ]\n      },\n      { name: 'Hong Miao', title: 'department manager' }\n    ]\n  }\n\n  for (let i = 0; i < 3; i++) {\n    data['children'].push({\n      name: 'Lao Lao',\n      title: 'general manager',\n      children: [\n        { name: 'Bo Miao', title: 'department manager' },\n        {\n          name: 'Su Miao',\n          title: 'department manager',\n          children: [{ name: 'Tie Hua', title: 'senior engineer' }]\n        }\n      ]\n    })\n  }\n\n  let temp = data\n  for (let i = 0; i < depth; i++) {\n    if (!temp.children) {\n      temp.children = []\n    }\n    temp.children.push({\n      name: 'Lao Lao',\n      title: 'general manager',\n      children: [\n        { name: 'Bo Miao', title: 'department manager' },\n        {\n          name: 'Su Miao',\n          title: 'department manager',\n          children: [\n            { name: 'Tie Hua', title: 'senior engineer' },\n            {\n              name: 'Hei Hei',\n              title: 'senior engineer',\n              children: [{ name: 'Xiang Xiang', title: 'UE engineer' }]\n            }\n          ]\n        }\n      ]\n    })\n    temp = temp.children[0]\n  }\n  return data\n}\n\n// 把树折叠起来 得到折叠后的数据\nexport function generateOrgChartDataFolded(depth, foldDepth) {\n  const data = this.generateOrgChartData(depth)\n  let tempNode = data\n  for (let i = 0; i < foldDepth && tempNode.children; i++) {\n    tempNode = tempNode.children[0]\n  }\n  tempNode._children = tempNode.children\n  tempNode.children = null\n  return data\n}\n","import * as colorUtil from './colorUtils';\nimport { generateOrgChartData, generateOrgChartDataFolded } from './dataGenerator';\n\nfunction compose(...funcs) {\n  if (funcs.length === 0) {\n    return arg => arg;\n  }\n  if (funcs.length === 1) {\n    return funcs[0];\n  }\n  return funcs.reduce((a, b) => (...args) => a(b(...args)));\n}\n\nfunction uuid() {\n  function s4() {\n    return Math.floor((1 + Math.random()) * 0x10000)\n      .toString(16)\n      .substring(1);\n  }\n  return 'id-' + s4() + s4() + '-' + s4() + '-' + s4() + '-' + s4() + '-' + s4() + s4() + s4();\n}\n\nfunction getRandomColor16() {\n  return '#' + Math.floor(Math.random() * 0xffffff).toString(16);\n}\n\n// 在canvas画布中绘制text\nfunction text(ctx, text, x, y, fontSize, fontColor) {\n  ctx.font = '14px Arial';\n  ctx.fillStyle = fontColor;\n  ctx.fillText(text, x, y);\n}\n\n// 在指定的区域绘制text, 如果超过限制就换行\nfunction wrapText(context, text, x, y, maxWidth, lineHeight, fontColor) {\n  context.fillStyle = fontColor;\n  let words = text.split(' ');\n  let line = '';\n  for (let n = 0; n < words.length; n++) {\n    let testLine = line + words[n] + ' ';\n    let metrics = context.measureText(testLine);\n    let testWidth = metrics.width;\n    if (testWidth > maxWidth && n > 0) {\n      context.fillText(line, x, y);\n      line = words[n] + ' ';\n      y += lineHeight;\n    } else {\n      line = testLine;\n    }\n  }\n  context.fillText(line, x, y);\n}\n\n// 绘制圆角方形\nfunction roundRect(context, x, y, width, height, radius = 5, fill, stroke = true) {\n  if (typeof radius === 'number') {\n    radius = { tl: radius, tr: radius, br: radius, bl: radius };\n  } else {\n    let defaultRadius = { tl: 0, tr: 0, br: 0, bl: 0 };\n    for (let side in defaultRadius) {\n      radius[side] = radius[side] || defaultRadius[side];\n    }\n  }\n  context.beginPath();\n  context.moveTo(x + radius.tl, y);\n  context.lineTo(x + width - radius.tr, y);\n  context.quadraticCurveTo(x + width, y, x + width, y + radius.tr);\n  context.lineTo(x + width, y + height - radius.br);\n  context.quadraticCurveTo(x + width, y + height, x + width - radius.br, y + height);\n  context.lineTo(x + radius.bl, y + height);\n  context.quadraticCurveTo(x, y + height, x, y + height - radius.bl);\n  context.lineTo(x, y + radius.tl);\n  context.quadraticCurveTo(x, y, x + radius.tl, y);\n  context.closePath();\n  if (fill) {\n    context.fill();\n  }\n  if (stroke) {\n    context.stroke();\n  }\n}\n\nexport { compose, uuid, getRandomColor16, text, wrapText, roundRect, generateOrgChartData, generateOrgChartDataFolded };\nexport default {\n  ...colorUtil,\n  compose,\n  uuid,\n  getRandomColor16,\n  text,\n  wrapText,\n  roundRect,\n  generateOrgChartData,\n  generateOrgChartDataFolded,\n};\n","import * as d3 from 'd3';\n\nexport default class Chart {\n  constructor() {\n    this._width = 600;\n    this._height = 400;\n    this._margins = { top: 30, left: 30, right: 30, bottom: 30 };\n    this._data = [];\n    this._scaleX = null;\n    this._scaleY = null;\n    this._colors = d3.scaleOrdinal(d3.schemeCategory10);\n    this._box = null;\n    this._svg = null;\n    this._body = null;\n  }\n  width(w) {\n    if (arguments.length === 0) return this._width;\n    this._width = w;\n    return this;\n  }\n  height(h) {\n    if (arguments.length === 0) return this._height;\n    this._height = h;\n    return this;\n  }\n  margins(m) {\n    if (arguments.length === 0) return this._margins;\n    this._margins = m;\n    return this;\n  }\n  data(d) {\n    if (arguments.length === 0) return this._data;\n    this._data = d;\n    return this;\n  }\n  scaleX(x) {\n    if (arguments.length === 0) return this._scaleX;\n    this._scaleX = x;\n    return this;\n  }\n  scaleY(y) {\n    if (arguments.length === 0) return this._scaleY;\n    this._scaleY = y;\n    return this;\n  }\n  svg(s) {\n    if (arguments.length === 0) return this._svg;\n    this._svg = s;\n    return this;\n  }\n  body(b) {\n    if (arguments.length === 0) return this._body;\n    this._body = b;\n    return this;\n  }\n  box(b) {\n    if (arguments.length === 0) return this._box;\n    this._box = b;\n    return this;\n  }\n  getBodyWidth() {\n    let width = this._width - this._margins.left - this._margins.right;\n    return width > 0 ? width : 0;\n  }\n  getBodyHeight() {\n    let height = this._height - this._margins.top - this._margins.bottom;\n    return height > 0 ? height : 0;\n  }\n  render() {\n    return this;\n  }\n  bodyX() {\n    return this._margins.left;\n  }\n  bodyY() {\n    return this._margins.top;\n  }\n  defineBodyClip() {\n    const padding = 10;\n\n    const clipPath = this._svg.select('defs');\n    if (clipPath) {\n      clipPath.remove();\n    }\n\n    this._svg\n      .append('defs')\n      .append('clipPath')\n      .attr('id', 'clip')\n      .append('rect')\n      .attr('width', this.getBodyWidth() + padding * 2)\n      .attr('height', this.getBodyHeight() + padding * 2)\n      .attr('x', -padding)\n      .attr('y', -padding);\n  }\n  renderBody() {\n    if (!this._body) {\n      this._body = this._svg\n        .append('g')\n        .attr('class', 'chart-body')\n        .attr('transform', 'translate(' + this.bodyX() + ',' + this.bodyY() + ')')\n        .attr('clip-path', 'url(#clip)');\n    }\n  }\n\n  renderBox() {\n    if (!this._box) {\n      this._box = d3\n        .select('body')\n        .append('div')\n        .attr('class', 'bar-chart-box');\n    }\n  }\n\n  renderSVG() {\n    if (!this._svg) {\n      this._svg = this._box\n        .append('svg')\n        .attr('width', this._width)\n        .attr('height', this._height);\n    }\n  }\n\n  renderChart() {\n    this.renderBox();\n\n    this.renderSVG();\n\n    this.defineBodyClip();\n\n    this.renderBody();\n\n    this.render();\n  }\n}\n","import React, { useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport c from 'classnames';\nimport * as d3 from 'd3';\nimport _ from 'lodash';\nimport { uuid } from 'utils/utils';\nimport Chart from 'Chart/Chart';\nimport css from './BarChat.module.scss';\n\nfunction BarChart({ config, className = '' }) {\n  const chartId = useRef(uuid());\n\n  const chartRef = useRef(new Chart());\n\n  useEffect(() => {\n    // 得到chart container, 并设置给chart.box\n    const box = d3.select(`#${chartId.current}`);\n    const chart = chartRef.current;\n    chart.box(box);\n\n    // 设置一下配置参数\n    chart.margins(config.margins);\n\n    // 拿出data\n    const data = _.get(config, 'data', []) || [];\n\n    // 尺度转换一下\n    const scaleX = d3\n      .scaleBand()\n      .domain(data.map(d => d.date))\n      .range([0, chart.getBodyWidth()])\n      .padding(config.barPadding);\n    chart.scaleX(scaleX);\n    const scaleY = d3\n      .scaleLinear()\n      .domain([0, d3.max(data, d => d.money)])\n      .range([chart.getBodyHeight(), 0]);\n    chart.scaleY(scaleY);\n\n    // 渲染柱形\n    chart.renderBars = function() {\n      const bars = chart\n        .body()\n        .selectAll('.bar-chart-bar')\n        .data(data);\n      bars\n        .enter()\n        .append('rect')\n        .attr('class', 'bar-chart-bar')\n        .merge(bars)\n        .attr('x', d => chart.scaleX()(d.date))\n        .attr('y', chart.scaleY()(0))\n        .attr('width', chart.scaleX().bandwidth())\n        .attr('height', 0)\n        .attr('fill', config.barColor)\n        .transition()\n        .duration(config.animateDuration)\n        .attr('height', d => chart.getBodyHeight() - chart.scaleY()(d.money))\n        .attr('y', d => chart.scaleY()(d.money));\n      bars.exit().remove();\n    };\n\n    // 渲染坐标轴\n    chart.renderX = function() {\n      chart.svg().select('.bar-chart-xaxis').remove()\n      // d3.select(`#${chartId.current} .bar-chart-xaxis`).remove();\n      chart\n        .svg()\n        .insert('g', '.chart-body')\n        .attr('transform', `translate(${chart.bodyX()}, ${chart.bodyY() + chart.getBodyHeight()})`)\n        .attr('class', 'bar-chart-xaxis')\n        .call(d3.axisBottom(chart.scaleX()));\n    };\n\n    chart.renderY = function() {\n      chart.svg().select('.bar-chart-yaxis').remove()\n      // d3.select(`#${chartId.current} .bar-chart-yaxis`).remove();\n      chart\n        .svg()\n        .insert('g', '.chart-body')\n        .attr('transform', `translate(${chart.bodyX()}, ${chart.bodyY()})`)\n        .attr('class', 'bar-chart-yaxis')\n        .call(d3.axisLeft(chart.scaleY()));\n    };\n\n    // 渲染X Y轴标签\n    chart.renderText = function() {\n      d3.select('.bar-chart-xaxis')\n        .append('text')\n        .attr('class', 'bar-chart-axisText')\n        .attr('x', chart.getBodyWidth())\n        .attr('y', 0)\n        .attr('fill', config.textColor)\n        .attr('dy', 30)\n        .text('日期');\n\n      d3.select('.bar-chart-yaxis')\n        .append('text')\n        .attr('class', 'bar-chart-axisText')\n        .attr('x', 0)\n        .attr('y', 0)\n        .attr('fill', config.textColor)\n        .attr('transform', 'rotate(-90)')\n        .attr('dy', -40)\n        .attr('text-anchor', 'end')\n        .text('每日收入 (元)');\n    };\n\n    // 渲染网格线\n    chart.renderGrid = function() {\n      d3.selectAll('.bar-chart-yaxis .tick').each(function(d) {\n        if (config.tickShowGrid.indexOf(d) > -1) {\n          d3.select(this)\n            .append('line')\n            .attr('class', 'bar-chart-grid')\n            .attr('stroke', config.gridColor)\n            .attr('x1', 0)\n            .attr('y1', 0)\n            .attr('x2', chart.getBodyWidth())\n            .attr('y2', 0);\n        }\n      });\n    };\n\n    // 汇总坐标轴相关的所有方法\n    chart.renderAxis = function() {\n      chart.renderX();\n      chart.renderY();\n      chart.renderText();\n      chart.renderGrid();\n    };\n\n    // 绑定鼠标交互\n    chart.addMouseOn = function() {\n      // TODO: 防抖函数中 设置d3.event有问题\n      // // 防抖\n      // function debounce(fn, time) {\n      //   let timeId = null;\n      //   return function() {\n      //     const context = this;\n      //     const event = d3.event;\n      //     timeId && clearTimeout(timeId);\n      //     timeId = setTimeout(() => {\n      //       d3.event = event;\n      //       fn.apply(context, arguments);\n      //     }, time);\n      //   };\n      // }\n\n      d3.selectAll('.bar-chart-bar')\n        .on('mouseover', function(d) {\n          const e = d3.event;\n          const position = d3.mouse(chart.svg().node());\n\n          d3.select(e.target).attr('fill', config.hoverColor);\n\n          chart\n            .svg()\n            .append('text')\n            .classed('bar-chart-tip', true)\n            .attr('x', position[0] + 5)\n            .attr('y', position[1])\n            .attr('fill', config.textColor)\n            .text(`收入: ${d.money}元`);\n        })\n        .on('mouseleave', function() {\n          const e = d3.event;\n          d3.select(e.target).attr('fill', chart._colors(0)); // TODO: 是否要改成config.barColor\n\n          d3.select('.bar-chart-tip').remove();\n        })\n        .on(\n          'mousemove',\n          // debounce(function() {\n          //   const position = d3.mouse(chart.svg().node());\n          //   d3.select('.bar-chart-tip')\n          //     .attr('x', position[0] + 5)\n          //     .attr('y', position[1] - 5);\n          // }, 6),\n          function() {\n            const position = d3.mouse(chart.svg().node());\n            d3.select('.bar-chart-tip')\n              .attr('x', position[0] + 5)\n              .attr('y', position[1] - 5);\n          },\n        );\n    };\n\n    chart.render = function() {\n      chart.renderBars();\n      chart.renderAxis();\n      chart.addMouseOn();\n    };\n    chart.renderChart();\n  }, [config]);\n\n  return <div id={chartId.current} className={c(css.barchart, className, 'bar-chart-box')}></div>;\n}\n\nBarChart.propTypes = {\n  config: PropTypes.object.isRequired,\n  className: PropTypes.string,\n};\n\nexport default BarChart;\n","import React, { useMemo, useState, useEffect } from 'react';\nimport * as d3 from 'd3';\n\nimport BarChart from 'components/BarChart/BarChart';\nimport css from './BarChartPage.module.scss';\n\nfunction BarChartPage() {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    const readCSV = async () => {\n      try {\n        const readData = await d3.csv(process.env.PUBLIC_URL + '/data.csv', function(d) {\n          return {\n            date: d.date,\n            money: +d.money,\n          };\n        });\n        // eslint-disable-next-line\n        console.log('readData: ', readData)\n        setData(readData);\n      } catch (e) {\n        // eslint-disable-next-line\n        console.log('e: ', e);\n      }\n    };\n    readCSV();\n  }, []);\n\n  const config = useMemo(\n    () => ({\n      data,\n      title: '条形图',\n      margins: { top: 80, left: 80, bottom: 50, right: 80 },\n      barPadding: 0.15,\n      barColor: '#096dd9',\n      textColor: 'black',\n      gridColor: 'gray',\n      tickShowGrid: [60, 120, 180],\n      hoverColor: '#40a9ff',\n      animateDuration: 1000,\n    }),\n    [data],\n  );\n\n  return (\n    <div className={css.barChartPage}>\n      <BarChart config={config} />\n    </div>\n  );\n}\n\nexport default BarChartPage;\n","import React, { useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport c from 'classnames';\nimport * as d3 from 'd3';\nimport _ from 'lodash';\nimport { uuid } from 'utils/utils';\nimport Chart from 'Chart/Chart';\nimport css from './LineChart.module.scss';\n\nfunction LineChart({ config, className = '' }) {\n  const chartId = useRef(uuid());\n\n  const chartRef = useRef(new Chart());\n\n  useEffect(() => {\n    // 得到chart container, 并设置给chart.box\n    const box = d3.select(`#${chartId.current}`);\n    const chart = chartRef.current;\n    chart.box(box);\n\n    // 设置一下配置参数\n    chart.margins(config.margins);\n\n    // 拿出data\n    const data = _.get(config, 'data', []) || [];\n\n    const parseDate = d3.timeParse('%Y-%m-%d');\n    // x\n    const x = d3\n      .scaleUtc()\n      .domain(d3.extent(data, d => parseDate(d.date)))\n      .range([0, chart.getBodyWidth()]);\n\n    // y\n    const y = d3\n      .scaleLinear()\n      .domain([0, d3.max(data, d => d.value)])\n      .nice()\n      .range([chart.getBodyHeight(), 0]);\n\n    // line\n    const line = d3\n      .line()\n      .defined(d => !Number.isNaN(+d.value))\n      .x(d => {\n        return x(parseDate(d.date));\n      })\n      .y(d => {\n        return y(d.value);\n      });\n\n    // xAxis\n    const xAxis = g =>\n      g\n        .attr('class', 'line-chart-xaxis')\n        .attr('transform', `translate(${chart.bodyX()}, ${chart.bodyY() + chart.getBodyHeight()})`)\n        .call(\n          d3\n            .axisBottom(x)\n            .ticks(chart.width() / 80)\n            .tickSizeOuter(0),\n        );\n\n    // yAxis\n    const yAxis = g =>\n      g\n        .attr('class', 'line-chart-yaxis')\n        .attr('transform', `translate(${chart.bodyX()}, ${chart.bodyY()})`)\n        .call(d3.axisLeft(y))\n        // .call(g => g.select('.domain').remove())\n        .call(g =>\n          g\n            .select('.tick:last-of-type text')\n            .clone()\n            .attr('x', 3)\n            .attr('text-anchor', 'start')\n            .attr('font-weight', 'bold')\n            .text('$ Close'),\n        );\n\n    chart.renderAxis = function() {\n      chart\n        .svg()\n        .select('.line-chart-xaxis')\n        .remove();\n      chart\n        .svg()\n        .select('.line-chart-yaxis')\n        .remove();\n\n      chart\n        .svg()\n        .append('g')\n        .call(xAxis);\n        \n      chart\n        .svg()\n        .append('g')\n        .call(yAxis);\n    };\n\n    chart.renderLine = function() {\n      chart\n        .svg()\n        .select('.line-chart-line-defined')\n        .remove();\n      chart\n        .svg()\n        .select('.line-chart-line')\n        .remove();\n      chart\n        .body()\n        .append('path')\n        .attr('class', 'line-chart-line-defined')\n        .datum(data.filter(line.defined()))\n        .attr('stroke', config.hoverColor)\n        .attr('fill', 'none')\n        .attr('d', line);\n      chart\n        .body()\n        .append('path')\n        .attr('class', 'line-chart-line')\n        .datum(data)\n        .attr('stroke', config.lineColor)\n        .attr('stroke-width', 1.5)\n        .attr('fill', 'none')\n        .attr('d', line);\n    };\n\n    chart.render = function() {\n      chart.renderAxis();\n      chart.renderLine();\n    };\n\n    chart.renderChart();\n  }, [config]);\n\n  return <div id={chartId.current} className={c(css.linechart, className, 'line-chart-box')}></div>;\n}\n\nLineChart.propTypes = {\n  config: PropTypes.object.isRequired,\n  className: PropTypes.string,\n};\n\nexport default LineChart;\n","import React, { useMemo, useState, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport dayjs from 'dayjs';\n\nimport LineChart from 'components/LineChart/LineChart';\nimport css from './LineChartPage.module.scss';\n\nfunction LineChartPage() {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    const readCSV = async () => {\n      try {\n        const readData = await d3.csv(process.env.PUBLIC_URL + '/aapl.csv', function(d) {\n          return {\n            date: dayjs(d.date, 'MMM D, YYYY').format('YYYY-MM-DD'),\n            value: +d.val,\n          };\n        });\n        setData(\n          readData\n            .filter(d => !Number.isNaN(d.value))\n            .map(d => ({\n              ...d,\n              value: dayjs(d.date, 'YYYY-MM-DD').month() < 3 ? undefined : d.value,\n            })),\n        );\n      } catch (e) {\n        // eslint-disable-next-line\n        console.log('e: ', e);\n      }\n    };\n    readCSV();\n  }, []);\n\n  const config = useMemo(\n    () => ({\n      data,\n      title: '线形图',\n      margins: { top: 80, left: 80, bottom: 50, right: 80 },\n      barPadding: 0.15,\n      lineColor: '#096dd9',\n      textColor: 'black',\n      gridColor: 'gray',\n      hoverColor: '#40a9ff',\n      animateDuration: 1000,\n    }),\n    [data],\n  );\n\n  return (\n    <div className={css.lineChartPage}>\n      <LineChart config={config} />\n    </div>\n  );\n}\n\nexport default LineChartPage;\n","import React, { useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport c from 'classnames';\nimport * as d3 from 'd3';\nimport _ from 'lodash';\nimport { uuid } from 'utils/utils';\nimport Chart from 'Chart/Chart';\nimport css from './PieChart.module.scss';\n\nfunction PieChart({ config, className = '' }) {\n  const chartId = useRef(uuid());\n\n  const chartRef = useRef(new Chart());\n\n  const chartContainer = useRef();\n\n  useEffect(() => {\n    // 得到chart container, 并设置给chart.box\n    const box = d3.select(`#${chartId.current}`);\n    const chart = chartRef.current;\n    chart.box(box);\n\n    // 设置一下配置参数\n    chart.margins(config.margins);\n    const height = chartContainer.current.offsetHeight;\n    const width = chartContainer.current.offsetWidth;\n    chart.width(width);\n    chart.height(height);\n\n    // 拿出data\n    const data = _.get(config, 'data', []) || [];\n\n    // 得到color方法\n    const color = d3\n      .scaleOrdinal()\n      .domain(data.map(d => d.name))\n      .range(d3.quantize(t => d3.interpolateSpectral(t * 0.8 + 0.1), data.length).reverse()); // TODO: 有可能要加入d3-scale-chromatic模块\n\n    // 得到弧线生成器\n    const arc = d3\n      .arc()\n      .innerRadius(Math.min(chart.getBodyWidth(), chart.getBodyHeight()) / 4 - 1)\n      .outerRadius(Math.min(chart.getBodyWidth(), chart.getBodyHeight()) / 2 - 1);\n\n    // 得到饼形上的label所在的弧线生成器\n    const arcLabelRadius = (Math.min(chart.getBodyWidth(), chart.getBodyHeight()) / 2) * 0.8;\n    const arcLabel = d3\n      .arc()\n      .innerRadius(arcLabelRadius)\n      .outerRadius(arcLabelRadius);\n\n    // 得到饼形数据集生成器\n    const pie = d3\n      .pie()\n      .sort(null)\n      .value(d => d.value);\n\n    // 渲染图形\n    chart.renderPie = function() {\n      // 得到饼形图数据集\n      const arcs = pie(data);\n\n      chart\n        .body()\n        .select('.pie-chart-pie')\n        .remove();\n      chart\n        .body()\n        .select('.pie-chart-pie-label')\n        .remove();\n\n      // 把饼形图加到svg的body中\n      chart\n        .body()\n        .append('g')\n        .attr('transform', `translate(${chart.getBodyWidth() / 2}, ${chart.getBodyHeight() / 2})`)\n        .attr('class', 'pie-chart-pie')\n        .attr('stroke', 'white')\n        .selectAll('path')\n        .data(arcs)\n        .join('path')\n        .attr('fill', d => color(d.data.name))\n        .attr('d', arc)\n        .append('title')\n        .text(d => `${d.data.name}: ${d.data.value.toLocaleString()}`);\n\n      chart\n        .body()\n        .append('g')\n        .attr('transform', `translate(${chart.getBodyWidth() / 2}, ${chart.getBodyHeight() / 2})`)\n        .attr('class', 'pie-chart-pie-label')\n        .attr('font-family', 'sans-serif')\n        .attr('font-size', 12)\n        .attr('text-anchor', 'middle')\n        .selectAll('text')\n        .data(arcs)\n        .join('text')\n        .attr('transform', d => `translate(${arcLabel.centroid(d)})`)\n        .call(text => text.append('tspan'))\n        .attr('y', '-0.4em')\n        .attr('font-weight', 'bold')\n        .text(d => d.data.name)\n        .call(text =>\n          text\n            .filter(d => d.endAngle - d.startAngle > 0.25)\n            .append('tspan')\n            .attr('x', 0)\n            .attr('y', '0.7em')\n            .attr('fill-opacity', 0.7)\n            .text(d => d.data.value.toLocaleString()),\n        );\n    };\n\n    chart.render = function() {\n      // chart.svg().attr('viewBox', [-chart.width() / 2, -chart.height() / 2, chart.width(), chart.height()]);\n      chart.renderPie();\n    };\n\n    chart.renderChart();\n  }, [config]);\n\n  return <div ref={chartContainer} id={chartId.current} className={c(css.piechart, className, 'pie-chart-box')}></div>;\n}\n\nPieChart.propTypes = {\n  config: PropTypes.object.isRequired,\n  className: PropTypes.string,\n};\n\nexport default PieChart;\n","import React, { useMemo, useState, useEffect } from 'react';\nimport * as d3 from 'd3';\n\nimport PieChart from 'components/PieChart/PieChart';\nimport css from './PieChartPage.module.scss';\n\nfunction PieChartPage() {\n  const [data, setData] = useState([]);\n\n  useEffect(() => {\n    const readCSV = async () => {\n      try {\n        const readData = await d3.csv(process.env.PUBLIC_URL + '/population-by-age.csv');\n        setData(readData);\n      } catch (e) {\n        // eslint-disable-next-line\n        console.log('e: ', e);\n      }\n    };\n    readCSV();\n  }, []);\n\n  const config = useMemo(\n    () => ({\n      data,\n      title: '饼形图',\n      margins: { top: 80, left: 80, bottom: 50, right: 80 },\n      textColor: 'black',\n      gridColor: 'gray',\n      animateDuration: 1000,\n    }),\n    [data],\n  );\n\n  return (\n    <div className={css.pieChartPage}>\n      <PieChart config={config} />\n    </div>\n  );\n}\n\nexport default PieChartPage;\n","import React, { useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport c from 'classnames';\nimport * as d3 from 'd3';\nimport _ from 'lodash';\nimport * as geo from 'd3-geo';\nimport * as d3Color from 'd3-scale-chromatic';\n\nimport { uuid } from 'utils/utils';\nimport Chart from 'Chart/Chart';\nimport css from './Map.module.scss';\n\nfunction Map({ config, className = '' }) {\n  const chartId = useRef(uuid());\n\n  const chartRef = useRef(new Chart());\n\n  const chartContainer = useRef();\n\n  useEffect(() => {\n    // 得到chart container, 并设置给chart.box\n    const box = d3.select(`#${chartId.current}`);\n    const chart = chartRef.current;\n    chart.box(box);\n\n    // 设置一下配置参数\n    chart.margins(config.margins);\n    const height = chartContainer.current.offsetHeight;\n    const width = chartContainer.current.offsetWidth;\n    chart.width(width);\n    chart.height(height);\n\n    // 拿出map data\n    const mapData = _.get(config, 'data', {}) || {};\n    const cityData = _.get(config, 'cityData', []) || [];\n\n    // 设置投影函数\n    const projection = geo\n      .geoMercator()\n      .scale(750)\n      .center([105, 38])\n      .translate([chart.getBodyWidth() / 2, chart.getBodyHeight() / 2]);\n\n    // 设置路径生成器\n    const path = geo.geoPath(projection);\n\n    // 创建颜色比例尺\n    const colors = d3.scaleOrdinal(d3Color.schemeRdYlGn[11]);\n    // const colors = getRandomColor16;\n\n    // 加载地图json并生成地图\n    chart.renderMap = function() {\n      if (!mapData.features) {\n        return;\n      }\n      chart\n        .body()\n        .selectAll('.map-path')\n        .remove();\n      chart\n        .body()\n        .selectAll('path')\n        .data(mapData.features)\n        .enter()\n        .append('path')\n        .attr('class', 'map-path')\n        .attr('d', path)\n        .attr('fill', (d, i) => colors(i))\n        .attr('stroke', 'lightGray')\n        .attr('stroke-width', 1)\n        .append('title')\n        .attr('')\n    };\n\n    // 渲染城市\n    chart.renderCity = function() {\n      chart\n        .body()\n        .selectAll('.map-city')\n        .data(cityData)\n        .enter()\n        .append('g')\n        .attr('class', 'map-city')\n        .attr('transform', d => {\n          const coor = projection([d.log, d.lat]);\n          return `translate(${coor[0]}, ${coor[1]})`;\n        })\n        .append('circle')\n        .attr('r', 4)\n        .attr('fill', 'blue')\n        .attr('class', 'map-city-point');\n    };\n\n    // 添加事件互动\n    chart.addEvent = function() {\n      const tooltip = d3.select('#china-map-tooltip');\n      chart\n        .body()\n        .selectAll('.map-city')\n        .on('mouseover', function(d) {\n          tooltip\n            .html('当前城市: ' + d.name)\n            .style('left', d3.event.pageX + 20 + 'px')\n            .style('top', d3.event.pageY + 20 + 'px')\n            .style('opacity', 1);\n\n          d3.select(this)\n            .select('circle')\n            .transition()\n            .duration(150)\n            .attr('r', 8);\n        })\n        .on('mouseout', function() {\n          tooltip.style('opacity', 0);\n          d3.select(this)\n            .select('circle')\n            .transition()\n            .duration(150)\n            .attr('r', 4);\n        });\n    };\n\n    chart.render = function() {\n      chart.renderMap();\n      chart.renderCity();\n      chart.addEvent();\n    };\n\n    chart.renderChart();\n  }, [config]);\n\n  return <div ref={chartContainer} id={chartId.current} className={c(css.map, className, 'map-chart-map')}></div>;\n}\n\nMap.propTypes = {\n  config: PropTypes.object.isRequired,\n  className: PropTypes.string,\n};\n\nexport default Map;\n","import React, { useMemo, useState, useEffect } from 'react';\nimport * as d3 from 'd3';\nimport _ from 'lodash';\n\nimport Map from 'components/Map/Map';\nimport css from './ChinaMapPage.module.scss';\n\nfunction ChinaMapPage() {\n  const [mapData, setMapData] = useState({});\n  const [cityData, setCityData] = useState({});\n\n  useEffect(() => {\n    const readCSV = async () => {\n      try {\n        const mapJson = await d3.json(process.env.PUBLIC_URL + '/china.json');\n        setMapData(mapJson);\n        const cityJson = await d3.json(process.env.PUBLIC_URL + '/city.json');\n        setCityData(cityJson);\n      } catch (e) {\n        // eslint-disable-next-line\n        console.log('e: ', e);\n      }\n    };\n    readCSV();\n  }, []);\n\n  const config = useMemo(\n    () => ({\n      data: mapData,\n      cityData: _.get(cityData, 'cities', []),\n      title: '中国地图',\n      margins: { top: 80, left: 80, bottom: 50, right: 80 },\n      textColor: 'black',\n      gridColor: 'gray',\n      animateDuration: 1000,\n    }),\n    [mapData, cityData],\n  );\n\n  return (\n    <div className={css.chinaMapPage}>\n      <Map config={config} />\n      <div id=\"china-map-tooltip\"></div>\n    </div>\n  );\n}\n\nexport default ChinaMapPage;\n","import React, { useRef, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport c from 'classnames';\nimport * as d3 from 'd3';\nimport _ from 'lodash';\n\nimport { uuid } from 'utils/utils';\nimport Chart from 'Chart/Chart';\nimport css from './SVGTree.module.scss';\n\nfunction SVGTree({ config, className = '' }) {\n  const chartId = useRef(uuid());\n\n  const chartRef = useRef(new Chart());\n\n  const chartContainer = useRef();\n\n  useEffect(() => {\n    // 得到chart container, 并设置给chart.box\n    const box = d3.select(`#${chartId.current}`);\n    const chart = chartRef.current;\n    chart.box(box);\n\n    // 设置一下配置参数\n    chart.margins(config.margins);\n    const height = chartContainer.current.offsetHeight;\n    const width = chartContainer.current.offsetWidth;\n    chart.width(width);\n    chart.height(height);\n\n    // 拿出map data\n    const data = _.get(config, 'data', {});\n\n    // 树生成器\n    const dy = width / 6;\n    const dx = 10;\n    const tree = d3.tree().nodeSize([dx, dy]);\n\n    // 创建一个水平的 link 生成器\n    const diagonal = d3\n      .linkHorizontal()\n      .x(d => d.y)\n      .y(d => d.x);\n\n    // 从给定的层次结构数据构造一个根节点并为各个节点指定深度等属性\n    const root = d3.hierarchy(data);\n    root.x0 = dy / 2;\n    root.y0 = 0;\n    root.descendants().forEach((d, i) => {\n      d.id = i;\n      d._children = d.children;\n      if (d.depth && d.data.name.length !== 7) {\n        d.children = null;\n      }\n    });\n\n    // 首先把svg设置属性\n    chart.renderSVG = function() {\n      chart.defineBodyClip = () => {};\n      if (!chart.svg()) {\n        chart.svg(\n          chart\n            .box()\n            .append('svg')\n            .attr('class', 'svg-container')\n            .attr('viewBox', [0, 0, width, dx])\n            .style('font', '10px sans-serif')\n            .style('user-select', 'none')\n            .attr('width', this._width)\n            .attr('height', this._height),\n        );\n      }\n    };\n    // 渲染树图\n    chart.renderSVGTree = function() {\n      chart.body().select('.link').remove();\n      const gLink = chart\n        .body()\n        .append('g')\n        .attr('class', 'link')\n        .attr('fill', 'none')\n        .attr('stroke', '#555')\n        .attr('stroke-opacity', 0.4)\n        .attr('stroke-width', 1.5);\n\n      chart.body().select('.node').remove();\n      const gNode = chart\n        .body()\n        .append('g')\n        .attr('class', 'node')\n        .attr('cursor', 'pointer')\n        .attr('pointer-events', 'all');\n\n      function update(source) {\n        const duration = d3.event && d3.event.altKey ? 2500 : 250;\n        // 拿到所有的1节点\n        const nodes = root.descendants().reverse();\n        // 拿到所有的线\n        const links = root.links();\n\n        // 计算新tree布局\n        tree(root);\n\n        // 找到最高点和最低点\n        let left = root;\n        let right = root;\n        root.eachBefore(node => {\n          if (node.x < left.x) {\n            left = node;\n          }\n          if (node.x > right.x) {\n            right = node;\n          }\n        });\n\n        const height = right.x - left.x + config.margins.top + config.margins.bottom;\n\n        const transition = chart\n          .svg()\n          .transition()\n          .duration(duration)\n          .attr('viewBox', [0, left.x - config.margins.top, width, height])\n          .attr('preserveAspectRatio', 'xMinYMin meet')\n          .tween('resize', window.ResizeObserver ? null : () => () => chart.svg().dispatch('toggle'));\n\n        const node = gNode.selectAll('g').data(nodes, d => d.id);\n\n        const nodeEnter = node\n          .enter()\n          .append('g')\n          .attr('class', 'node-node')\n          .attr('transform', d => `translate(${source.y0}, ${source.x0})`)\n          .attr('fill-opacity', 0)\n          .attr('stroke-opacity', 0)\n          .on('click', d => {\n            d.children = d.children ? null : d._children;\n            update(d);\n          });\n\n        nodeEnter\n          .append('circle')\n          .attr('class', 'node-circle')\n          .attr('r', 2.5)\n          .attr('fill', d => (d._children ? '#555' : '#999'))\n          .attr('stroke-width', 10);\n\n        // 把所有节点挪到他们的新位置\n        const updateNode = node.merge(nodeEnter);\n\n        updateNode\n          .transition(transition)\n          .attr('transform', d => `translate(${d.y}, ${d.x})`)\n          .attr('fill-opacity', 1)\n          .attr('stroke-opacity', 1);\n\n        chart\n          .svg()\n          .selectAll('text')\n          .remove();\n\n        updateNode\n          .append('text')\n          .attr('dy', '0.31em')\n          .attr('x', d => (d.children ? -6 : 6))\n          .attr('text-anchor', d => (d.children ? 'end' : 'start'))\n          .text(d => d.data.name)\n          .clone(true)\n          .lower()\n          .attr('stroke-linejoin', 'round')\n          .attr('stroke-width', 3)\n          .attr('stroke', 'white');\n\n        // 应该删除的节点 挪到他们的父节点再删除\n        node\n          .exit()\n          .transition(transition)\n          .remove()\n          .attr('transform', d => `translate(${source.y}, ${source.x})`)\n          .attr('fill-opacity', 0)\n          .attr('stroke-opacity', 0);\n\n        // 更新链接线\n        const link = gLink.selectAll('path').data(links, d => d.target.id);\n\n        const linkEnter = link\n          .enter()\n          .append('path')\n          .attr('class', 'link-path')\n          .attr('d', d => {\n            const o = { x: source.x0, y: source.y0 };\n            return diagonal({ source: o, target: o });\n          });\n\n        link\n          .merge(linkEnter)\n          .transition(transition)\n          .attr('d', diagonal);\n\n        link\n          .exit()\n          .transition(transition)\n          .attr('d', d => {\n            const o = { x: source.x, y: source.y };\n            return diagonal({ source: o, target: o });\n          });\n\n        // 隐藏掉旧节点位置\n        root.eachBefore(d => {\n          d.x0 = d.x;\n          d.y0 = d.y;\n        });\n      }\n\n      update(root);\n    };\n\n    chart.render = function() {\n      chart.renderSVGTree();\n    };\n\n    chart.renderChart();\n  }, [config]);\n\n  return <div ref={chartContainer} id={chartId.current} className={c(css.svgTree, className, 'svg-tree')}></div>;\n}\n\nSVGTree.propTypes = {\n  config: PropTypes.object.isRequired,\n  className: PropTypes.string,\n};\n\nexport default SVGTree;\n","import React, { useMemo, useState, useEffect } from 'react';\nimport * as d3 from 'd3';\n\nimport SVGTree from 'components/SVGTree/SVGTree';\nimport css from './SVGTreePage.module.scss';\n\nfunction SVGTreePage() {\n  const [data, setData] = useState({});\n\n  useEffect(() => {\n    const readJson = async () => {\n      try {\n        const treeJson = await d3.json(process.env.PUBLIC_URL + '/flare-2.json');\n        setData(treeJson);\n      } catch (e) {\n        // eslint-disable-next-line\n        console.log('e: ', e);\n      }\n    };\n    readJson();\n  }, []);\n\n  const config = useMemo(\n    () => ({\n      data: data,\n      title: '树状图',\n      margins: { top: 80, left: 80, bottom: 50, right: 80 },\n      textColor: 'black',\n      gridColor: 'gray',\n      animateDuration: 1000,\n    }),\n    [data],\n  );\n\n  return (\n    <div className={css.svgTreePage}>\n      <SVGTree config={config} />\n    </div>\n  );\n}\n\nexport default SVGTreePage;\n","// 参考自 https://juejin.im/post/5b10f62f5188257d7541ad71\nimport * as d3 from 'd3';\nimport Util from 'utils/utils';\n\nclass Tree {\n  constructor(containerDom, config) {\n    this.containerDom = containerDom;\n    this.config = config;\n    this.d3 = d3;\n    this.init();\n  }\n\n  init() {\n    // 初始化变量\n    this.initVariables();\n    // 初始化canvas\n    this.initCanvas();\n    // 初始化虚拟dom\n    this.initVirtualNode();\n    // 设置监听交互\n    this.setCanvasListener();\n  }\n\n  initVariables() {\n    this.height = this.containerDom.offsetHeight;\n    this.width = this.containerDom.offsetWidth;\n\n    this.padding = 20;\n    // tree node size\n    this.nodeWidth = 180;\n    this.nodeHeight = 280;\n\n    // unit size\n    this.unitPadding = 20;\n    this.unitWidth = 140;\n    this.unitHeight = 100;\n\n    // animation duration\n    this.duration = 600;\n    this.scale = 1.0;\n  }\n\n  initCanvas() {\n    this.container = this.d3.select(this.containerDom);\n    this.canvasNode = this.container\n      .append('canvas')\n      .attr('class', 'canvas-tree-canvas')\n      .attr('width', this.width)\n      .attr('height', this.height);\n    this.hiddenCanvasNode = this.container\n      .append('canvas')\n      .attr('class', 'canvas-tree-canvas')\n      .attr('width', this.width)\n      .attr('height', this.height)\n      .style('display', 'none');\n    this.context = this.canvasNode.node().getContext('2d');\n    this.context.translate(this.width / 2, this.padding);\n    this.hiddenContext = this.hiddenCanvasNode.node().getContext('2d');\n    this.hiddenContext.translate(this.width / 2, this.padding);\n  }\n\n  initVirtualNode() {\n    // 创建虚拟节点\n    const virtualContainer = document.createElement('root');\n    this.virtualContainerNode = this.d3.select(virtualContainer);\n    this.colorNodeMap = {};\n  }\n\n  setCanvasListener() {\n    this.setClickListener();\n    this.setDragListener();\n    this.setMouseWheelZoomListener();\n  }\n\n  setClickListener() {\n    const self = this;\n    this.canvasNode.node().addEventListener('click', e => {\n      // 通过坐标信息, 在隐藏的canvas中拿到对应的颜色\n      const colorStr = Util.getColorStrFromCanvas(self.hiddenContext, e.layerX, e.layerY);\n      const node = self.colorNodeMap[colorStr];\n      if (node) {\n        // let treeNodeData = node.data()[0]\n        // self.hideChildren(treeNodeData, true)\n        self.toggleTreeNode(node.data()[0]);\n        self.update(node.data()[0]);\n      }\n    });\n  }\n\n  toggleTreeNode(treeNode) {\n    if (treeNode.children) {\n      treeNode._children = treeNode.children\n      treeNode.children = null\n    } else {\n      treeNode.children = treeNode._children\n      treeNode._children = null\n    }\n  }\n\n  setDragListener() {\n    this.onDrag_ = false\n    this.dragStartPoint_ = { x: 0, y: 0 }\n    let self = this\n    this.canvasNode.node().onmousedown = function(e) {\n      self.dragStartPoint_.x = e.x\n      self.dragStartPoint_.y = e.y\n      self.onDrag_ = true\n    }\n\n    this.canvasNode.node().onmousemove = function(e) {\n      if (!self.onDrag_) {\n        return\n      }\n      self.context.translate(\n        (e.x - self.dragStartPoint_.x) / self.scale,\n        (e.y - self.dragStartPoint_.y) / self.scale\n      )\n      self.hiddenContext.translate(\n        (e.x - self.dragStartPoint_.x) / self.scale,\n        (e.y - self.dragStartPoint_.y) / self.scale\n      )\n      self.dragStartPoint_.x = e.x\n      self.dragStartPoint_.y = e.y\n    }\n\n    this.canvasNode.node().onmouseout = function(e) {\n      if (self.onDrag_) {\n        self.onDrag_ = false\n      }\n    }\n\n    this.canvasNode.node().onmouseup = function(e) {\n      if (self.onDrag_) {\n        self.onDrag_ = false\n      }\n    }\n  }\n\n  setMouseWheelZoomListener() {\n    let self = this\n    this.canvasNode.node().addEventListener('mousewheel', event => {\n      event.preventDefault()\n      if (event.deltaY < 0) {\n        self.bigger()\n      } else {\n        self.smaller()\n      }\n    })\n  }\n\n  bigger() {\n    if (this.scale > 7) return\n    this.clearCanvas_()\n    this.scale = (this.scale * 5) / 4\n    this.context.scale(5 / 4, 5 / 4)\n    this.hiddenContext.scale(5 / 4, 5 / 4)\n  }\n\n  smaller() {\n    if (this.scale < 0.2) return\n    this.clearCanvas_()\n\n    this.scale = (this.scale * 4) / 5\n    this.context.scale(4 / 5, 4 / 5)\n    this.hiddenContext.scale(4 / 5, 4 / 5)\n  }\n\n  clearCanvas_() {\n    this.context.clearRect(-1000000, -10000, 2000000, 2000000)\n    this.hiddenContext.clearRect(-1000000, -10000, 2000000, 2000000)\n  }\n\n  // 绘制方法\n  draw(data) {\n    this.data = this.d3.hierarchy(data)\n    // 定义 树生成器\n    this.treeGenerator = this.d3\n      .tree()\n      .nodeSize([this.nodeWidth, this.nodeHeight])\n    // 对各个需要更新的数据进行更新\n    this.update()\n\n    let self = this\n    this.d3.timer(function() {\n      self.drawCanvas()\n    })\n  }\n\n  // 更新目标节点\n  update(targetTreeNode) {\n    this.treeData = this.treeGenerator(this.data)\n    let nodes = this.treeData.descendants()\n    let links = this.treeData.links()\n\n    let animatedStartX = 0\n    let animatedStartY = 0\n    let animatedEndX = 0\n    let animatedEndY = 0\n    if (targetTreeNode) {\n      animatedStartX = targetTreeNode.x0\n      animatedStartY = targetTreeNode.y0\n      animatedEndX = targetTreeNode.x\n      animatedEndY = targetTreeNode.y\n    }\n\n    // 更新单元块儿\n    this.updateOrgUnits(\n      nodes,\n      animatedStartX,\n      animatedStartY,\n      animatedEndX,\n      animatedEndY\n    )\n    // 更新连接线\n    this.updateLinks(\n      links,\n      animatedStartX,\n      animatedStartY,\n      animatedEndX,\n      animatedEndY\n    )\n\n    // 设置上唯一颜色\n    this.addColorKey()\n    // 虚拟节点绑定至树形数据结构上\n    this.bindNodeToTreeData()\n  }\n\n  // 更新单元块儿\n  updateOrgUnits(\n    nodes,\n    animatedStartX,\n    animatedStartY,\n    animatedEndX,\n    animatedEndY\n  ) {\n    const orgUnitSelection = this.virtualContainerNode\n      .selectAll('.orgUnit')\n      .data(nodes, d => d['colorKey'])\n\n    orgUnitSelection\n      .attr('class', 'orgUnit')\n      .attr('x', function(data) {\n        return data.x0\n      })\n      .attr('y', function(data) {\n        return data.y0\n      })\n      .transition()\n      .duration(this.duration)\n      .attr('x', function(data) {\n        return data.x\n      })\n      .attr('y', function(data) {\n        return data.y\n      })\n      .attr('fillStyle', '#ff0000')\n\n    orgUnitSelection\n      .enter()\n      .append('orgUnit')\n      .attr('class', 'orgUnit')\n      .attr('x', animatedStartX)\n      .attr('y', animatedStartY)\n      .transition()\n      .duration(this.duration)\n      .attr('x', function(data) {\n        return data.x\n      })\n      .attr('y', function(data) {\n        return data.y\n      })\n      .attr('fillStyle', '#ff0000')\n\n    orgUnitSelection\n      .exit()\n      .transition()\n      .duration(this.duration)\n      .attr('x', animatedEndX)\n      .attr('y', animatedEndY)\n      .remove()\n\n    // record origin index for animation\n    nodes.forEach(treeNode => {\n      treeNode['x0'] = treeNode.x\n      treeNode['y0'] = treeNode.y\n    })\n  }\n\n  updateLinks(\n    links,\n    animatedStartX,\n    animatedStartY,\n    animatedEndX,\n    animatedEndY\n  ) {\n    let linkSelection = this.virtualContainerNode\n      .selectAll('.link')\n      .data(links, function(d) {\n        return d.source['colorKey'] + ':' + d.target['colorKey']\n      })\n\n    linkSelection\n      .attr('class', 'link')\n      .attr('sourceX', function(linkData) {\n        return linkData.source['x00']\n      })\n      .attr('sourceY', function(linkData) {\n        return linkData.source['y00']\n      })\n      .attr('targetX', function(linkData) {\n        return linkData.target['x00']\n      })\n      .attr('targetY', function(linkData) {\n        return linkData.target['y00']\n      })\n      .transition()\n      .duration(this.duration)\n      .attr('sourceX', function(linkData) {\n        return linkData.source.x\n      })\n      .attr('sourceY', function(linkData) {\n        return linkData.source.y\n      })\n      .attr('targetX', function(linkData) {\n        return linkData.target.x\n      })\n      .attr('targetY', function(linkData) {\n        return linkData.target.y\n      })\n\n    linkSelection\n      .enter()\n      .append('link')\n      .attr('class', 'link')\n      .attr('sourceX', animatedStartX)\n      .attr('sourceY', animatedStartY)\n      .attr('targetX', animatedStartX)\n      .attr('targetY', animatedStartY)\n      .transition()\n      .duration(this.duration)\n      .attr('sourceX', function(link) {\n        return link.source.x\n      })\n      .attr('sourceY', function(link) {\n        return link.source.y\n      })\n      .attr('targetX', function(link) {\n        return link.target.x\n      })\n      .attr('targetY', function(link) {\n        return link.target.y\n      })\n\n    linkSelection\n      .exit()\n      .transition()\n      .duration(this.duration)\n      .attr('sourceX', animatedEndX)\n      .attr('sourceY', animatedEndY)\n      .attr('targetX', animatedEndX)\n      .attr('targetY', animatedEndY)\n      .remove()\n\n    // record origin data for animation\n    links.forEach(treeNode => {\n      treeNode.source['x00'] = treeNode.source.x\n      treeNode.source['y00'] = treeNode.source.y\n      treeNode.target['x00'] = treeNode.target.x\n      treeNode.target['y00'] = treeNode.target.y\n    })\n    linkSelection = null\n  }\n\n  // 给每个节点都添加上唯一的颜色\n  addColorKey() {\n    // give each node a unique color\n    let self = this\n    this.virtualContainerNode.selectAll('.orgUnit').each(function() {\n      let node = self.d3.select(this)\n      let newColor = Util.randomColor()\n      while (self.colorNodeMap[newColor]) {\n        newColor = Util.randomColor()\n      }\n      node.attr('colorKey', newColor)\n      node.data()[0]['colorKey'] = newColor\n      self.colorNodeMap[newColor] = node\n    })\n  }\n\n  //  把虚拟节点绑定在树形数据上\n  bindNodeToTreeData() {\n    let self = this\n    this.virtualContainerNode.selectAll('.orgUnit').each(function() {\n      let node = self.d3.select(this)\n      let data = node.data()[0]\n      data['node'] = node\n    })\n  }\n\n  // 正式绘制实际的canvas\n  drawCanvas() {\n    this.drawShowCanvas()\n    this.drawHiddenCanvas()\n  }\n\n  drawShowCanvas() {\n    this.context.clearRect(-50000, -10000, 100000, 100000)\n\n    let self = this\n    // draw links\n    this.virtualContainerNode.selectAll('.link').each(function() {\n      let node = self.d3.select(this)\n      let linkPath = self.d3\n        .linkVertical()\n        .x(function(d) {\n          return d.x\n        })\n        .y(function(d) {\n          return d.y\n        })\n        .source(function() {\n          return { x: node.attr('sourceX'), y: node.attr('sourceY') }\n        })\n        .target(function() {\n          return { x: node.attr('targetX'), y: node.attr('targetY') }\n        })\n      let path = new Path2D(linkPath())\n      self.context.stroke(path)\n    })\n\n    this.virtualContainerNode.selectAll('.orgUnit').each(function() {\n      let node = self.d3.select(this)\n      let treeNode = node.data()[0]\n      let data = treeNode.data\n      self.context.fillStyle = '#3ca0ff'\n      let indexX = Number(node.attr('x')) - self.unitWidth / 2\n      let indexY = Number(node.attr('y')) - self.unitHeight / 2\n\n      // draw unit outline rect (if you want to modify this line ===>   please modify the same line in `drawHiddenCanvas`)\n      Util.roundRect(\n        self.context,\n        indexX,\n        indexY,\n        self.unitWidth,\n        self.unitHeight,\n        4,\n        true,\n        false\n      )\n\n      Util.text(\n        self.context,\n        data.name,\n        indexX + self.unitPadding,\n        indexY + self.unitPadding,\n        '20px',\n        '#ffffff'\n      )\n      // Util.text(self.context, data.title, indexX + self.unitPadding, indexY + self.unitPadding + 30, '20px', '#000000')\n      let maxWidth = self.unitWidth - 2 * self.unitPadding\n      Util.wrapText(\n        self.context,\n        data.title,\n        indexX + self.unitPadding,\n        indexY + self.unitPadding + 24,\n        maxWidth,\n        20\n      )\n    })\n  }\n\n  drawHiddenCanvas() {\n    this.hiddenContext.clearRect(-50000, -10000, 100000, 100000)\n\n    let self = this\n    this.virtualContainerNode.selectAll('.orgUnit').each(function() {\n      let node = self.d3.select(this)\n      self.hiddenContext.fillStyle = node.attr('colorKey')\n      Util.roundRect(\n        self.hiddenContext,\n        Number(node.attr('x')) - self.unitWidth / 2,\n        Number(node.attr('y')) - self.unitHeight / 2,\n        self.unitWidth,\n        self.unitHeight,\n        4,\n        true,\n        false\n      )\n    })\n  }\n}\n\nexport default Tree;\n","import React, { useRef, useMemo, useEffect } from 'react';\nimport PropTypes from 'prop-types';\n\nimport { generateOrgChartData } from 'utils/utils';\n\nimport Tree from './Tree';\n\nimport css from './CanvasTree.module.scss';\n\nfunction CanvasTree({ config = {} }) {\n  const containerRef = useRef();\n\n  const data = useMemo(() => generateOrgChartData(10), []);\n\n  useEffect(() => {\n    const tree = new Tree(containerRef.current, config);\n    // eslint-disable-next-line\n    console.log('containerRef width: ', containerRef.current.offsetWidth)\n    // eslint-disable-next-line\n    console.log('containerRef width: ', containerRef.current.offsetHeight)\n    tree.draw(data);\n  }, [data, config]);\n\n  return <div ref={containerRef} className={css.canvasTree}></div>;\n}\n\nCanvasTree.propTypes = {\n  config: PropTypes.object,\n};\n\nexport default CanvasTree;\n","import React from 'react';\nimport CanvasTree from 'components/CanvasTree/CanvasTree';\nimport css from './CanvasTreePage.module.scss';\n\nfunction CanvasTreePage() {\n  return (\n    <div className={css.CanvasTreePage}>\n      <CanvasTree />\n    </div>\n  );\n}\n\nexport default CanvasTreePage;\n","import React from 'react';\nimport { BrowserRouter as Router, Switch, Route, Link, Redirect } from 'react-router-dom';\n\nimport { Layout, Menu } from 'antd';\n\nimport Home from 'view/Home/Home';\nimport BarChartPage from 'view/BarChartPage/BarChartPage';\nimport LineChartPage from 'view/LineChartPage/LineChartPage';\nimport PieChartPage from 'view/PieChartPage/PieChartPage';\nimport ChinaMapPage from 'view/ChinaMapPage/ChinaMapPage';\nimport SVGTreePage from 'view/SVGTreePage/SVGTreePage';\nimport CanvasTreePage from 'view/CanvasTreePage/CanvasTreePage';\nimport css from './App.module.scss';\n\nconst { Header, Footer, Sider, Content } = Layout;\n\nexport default function App() {\n  return (\n    <Router basename=\"/D3-Learning\">\n      <div className={css.app}>\n        <Layout className={css.container}>\n          <Header>\n            <Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['1']} style={{ lineHeight: '64px' }}>\n              <Menu.Item key=\"1\">D3</Menu.Item>\n            </Menu>\n          </Header>\n          <Layout className={css.body}>\n            <Sider className={css.sider}>\n              <Menu className={css.sideBarMenu} theme=\"light\" mode=\"inline\" defaultSelectedKeys={['home']}>\n                <Menu.Item key=\"home\">\n                  <Link className=\"nav-text\" to=\"/home\">\n                    home\n                  </Link>\n                </Menu.Item>\n                <Menu.Item key=\"bar\">\n                  <Link className=\"nav-text\" to=\"/bar\">\n                    bar chart\n                  </Link>\n                </Menu.Item>\n                <Menu.Item key=\"line\">\n                  <Link className=\"nav-text\" to=\"/line\">\n                    line chart\n                  </Link>\n                </Menu.Item>\n                <Menu.Item key=\"pie\">\n                  <Link className=\"nav-text\" to=\"/pie\">\n                    pie chart\n                  </Link>\n                </Menu.Item>\n                <Menu.Item key=\"map\">\n                  <Link className=\"nav-text\" to=\"/map\">\n                    map chart\n                  </Link>\n                </Menu.Item>\n                <Menu.Item key=\"svgTree\">\n                  <Link className=\"nav-text\" to=\"/svg-tree\">\n                    svg tree\n                  </Link>\n                </Menu.Item>\n                <Menu.Item key=\"canvasTree\">\n                  <Link className=\"nav-text\" to=\"/canvas-tree\">\n                    canvas tree\n                  </Link>\n                </Menu.Item>\n              </Menu>\n            </Sider>\n            <Content className={css.main}>\n              <Switch>\n                <Route path=\"/home\">\n                  <Home />\n                </Route>\n                <Route path=\"/bar\">\n                  <BarChartPage />\n                </Route>\n                <Route path=\"/line\">\n                  <LineChartPage />\n                </Route>\n                <Route path=\"/pie\">\n                  <PieChartPage />\n                </Route>\n                <Route path=\"/map\">\n                  <ChinaMapPage />\n                </Route>\n                <Route path=\"/svg-tree\">\n                  <SVGTreePage />\n                </Route>\n                <Route path=\"/canvas-tree\">\n                  <CanvasTreePage />\n                </Route>\n                <Route exact path=\"/\">\n                  <Redirect to=\"/home\" />\n                </Route>\n              </Switch>\n            </Content>\n          </Layout>\n          <Footer className={css.footer}>Footer</Footer>\n        </Layout>\n      </div>\n    </Router>\n  );\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"App_app__2ziFi\",\"container\":\"App_container__eSJ6i\",\"body\":\"App_body__2a4FT\",\"sideBarMenu\":\"App_sideBarMenu__PtotW\",\"sider\":\"App_sider__1ouFU\",\"main\":\"App_main__uN9ca\",\"footer\":\"App_footer__3csul\"};"],"sourceRoot":""}